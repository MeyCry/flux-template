// Generated by CoffeeScript 1.10.0
var Actions, Constants, Dispatcher, _;

Dispatcher = require('../dispatcher/Dispatcher');

Constants = require("../constants");

_ = require("lodash");

Actions = {
  clearNotify: function() {
    return Dispatcher.handleViewAction({
      actionType: "notify",
      data: {
        text: "",
        status: ""
      }
    });
  },
  submitItemContainer: function(index, containerData) {
    Dispatcher.handleServerAction({
      actionType: "submitItemContainer",
      data: index
    });
    return $.ajax({
      url: "/admin/api/containers",
      type: "PATCH",
      dataType: 'json',
      contentType: "application/json",
      data: JSON.stringify(containerData)
    }).done(function(data) {
      if (data.status === false) {
        return Dispatcher.handleServerAction({
          actionType: "notify",
          data: {
            text: "Submit Container: server not eat this",
            status: "alert-warning"
          }
        });
      }
      return Dispatcher.handleServerAction({
        actionType: "notify",
        data: {
          text: "Submit Container is done",
          status: "alert-success"
        }
      });
    }).error(function(q, w, e) {
      return Dispatcher.handleServerAction({
        actionType: "notify",
        data: {
          text: w,
          status: "alert-danger"
        }
      });
    });
  },
  submitItemAction: function(index, actionData) {
    Dispatcher.handleServerAction({
      actionType: "submitItemAction",
      data: index
    });
    return $.ajax({
      url: "/admin/api/actions",
      type: "PATCH",
      dataType: 'json',
      contentType: "application/json",
      data: JSON.stringify(actionData)
    }).done(function(data) {
      if (data.status === false) {
        return Dispatcher.handleServerAction({
          actionType: "notify",
          data: {
            text: "Submit Action: server not eat this",
            status: "alert-warning"
          }
        });
      }
      return Dispatcher.handleServerAction({
        actionType: "notify",
        data: {
          text: "Submit Action is done",
          status: "alert-success"
        }
      });
    }).error(function(q, w, e) {
      return Dispatcher.handleServerAction({
        actionType: "notify",
        data: {
          text: w,
          status: "alert-danger"
        }
      });
    });
  },
  loadData: function() {
    Dispatcher.handleServerAction({
      actionType: "notify",
      data: {
        text: "Loading...",
        status: "alert-info"
      }
    });
    $.ajax({
      url: "/admin/api/containers",
      type: "GET",
      dataType: "JSON"
    }).done(function(data) {
      if ((data.status != null) && data.status === false) {
        return Dispatcher.handleServerAction({
          actionType: "notify",
          data: {
            text: "Server can not reed data from Containers",
            status: "alert-warning"
          }
        });
      }
      Dispatcher.handleServerAction({
        actionType: "loadContainers",
        data: data
      });
      return Dispatcher.handleServerAction({
        actionType: "notify",
        data: {
          text: "Data is ready",
          status: "alert-success"
        }
      });
    }).error(function(q, w, e) {
      return Dispatcher.handleServerAction({
        actionType: "notify",
        data: {
          text: w,
          status: "alert-danger"
        }
      });
    });
    return $.ajax({
      url: "/admin/api/actions",
      type: "GET",
      dataType: "JSON"
    }).done(function(data) {
      if ((data.status != null) && data.status === false) {
        return Dispatcher.handleServerAction({
          actionType: "notify",
          data: {
            text: "Server can not reed data from Actions",
            status: "alert-warning"
          }
        });
      }
      return Dispatcher.handleServerAction({
        actionType: "loadActions",
        data: data
      });
    }).error(function(q, w, e) {
      return Dispatcher.handleServerAction({
        actionType: "notify",
        data: {
          text: w,
          status: "alert-danger"
        }
      });
    });
  },
  addActionToContainer: function(actionID, containerID, indexOfContainer) {
    return Dispatcher.handleViewAction({
      actionType: "addActionToContainer",
      data: {
        actionID: actionID,
        containerID: containerID,
        indexOfContainer: indexOfContainer
      }
    });
  },
  addLanguage: function(data) {
    return Dispatcher.handleViewAction({
      actionType: "addLanguage",
      data: data
    });
  },
  addItemAction: function() {
    return $.ajax({
      url: "/admin/api/actions",
      type: "POST",
      dataType: 'json',
      contentType: "application/json",
      data: JSON.stringify(Constants.DEFAULT_ACTION)
    }).done(function(data) {
      if (data.status === false) {
        return Dispatcher.handleServerAction({
          actionType: "notify",
          data: {
            text: "Add Action fail: server not eat this",
            status: "alert-warning"
          }
        });
      }
      Dispatcher.handleViewAction({
        actionType: "addItemAction",
        data: data.status
      });
      return Dispatcher.handleServerAction({
        actionType: "notify",
        data: {
          text: "Add Action success",
          status: "alert-success"
        }
      });
    }).error(function(q, w, e) {
      return Dispatcher.handleServerAction({
        actionType: "notify",
        data: {
          text: "Add Action fail " + w,
          status: "alert-danger"
        }
      });
    });
  },
  addItemContainer: function(countOfContainers) {
    var cloneContainer;
    cloneContainer = _.cloneDeep(Constants.DEFAULT_CONTAINER);
    cloneContainer.priority = countOfContainers;
    return $.ajax({
      url: "/admin/api/containers",
      type: "POST",
      dataType: 'json',
      contentType: "application/json",
      data: JSON.stringify(cloneContainer)
    }).done(function(data) {
      if (data.status === false) {
        return Dispatcher.handleServerAction({
          actionType: "notify",
          data: {
            text: "Add Container fail: server not eat this",
            status: "alert-warning"
          }
        });
      }
      cloneContainer.id = data.status;
      Dispatcher.handleViewAction({
        actionType: "addItemContainer",
        data: cloneContainer
      });
      return Dispatcher.handleServerAction({
        actionType: "notify",
        data: {
          text: "Add Container success",
          status: "alert-success"
        }
      });
    }).error(function(q, w, e) {
      return Dispatcher.handleServerAction({
        actionType: "notify",
        data: {
          text: "Add Container fail " + w,
          status: "alert-danger"
        }
      });
    });
  },
  deleteItemAction: function(index, itemAction) {
    var data;
    Dispatcher.handleViewAction({
      actionType: "deleteItemAction",
      data: index
    });
    data = JSON.stringify(itemAction);
    return $.ajax({
      url: "/admin/api/actions",
      type: "DELETE",
      dataType: 'json',
      contentType: "application/json",
      data: data
    }).done(function(data) {
      if (data.status === false) {
        return Dispatcher.handleServerAction({
          actionType: "notify",
          data: {
            text: "Delete Action: server not eat this",
            status: "alert-warning"
          }
        });
      }
      return Dispatcher.handleServerAction({
        actionType: "notify",
        data: {
          text: "Delete Action success",
          status: "alert-success"
        }
      });
    }).error(function(q, w, e) {
      return Dispatcher.handleServerAction({
        actionType: "notify",
        data: {
          text: "Delete Action fail " + w,
          status: "alert-danger"
        }
      });
    });
  },
  deleteItemContainer: function(index, itemContainer) {
    var data;
    Dispatcher.handleViewAction({
      actionType: "deleteItemContainer",
      data: index
    });
    data = JSON.stringify(itemContainer);
    return $.ajax({
      url: "/admin/api/containers",
      type: "DELETE",
      dataType: 'json',
      contentType: "application/json",
      data: data
    }).done(function(data) {
      if (data.status === false) {
        return Dispatcher.handleServerAction({
          actionType: "notify",
          data: {
            text: "Delete Container: server not eat this",
            status: "alert-warning"
          }
        });
      }
      return Dispatcher.handleServerAction({
        actionType: "notify",
        data: {
          text: "Delete Container success",
          status: "alert-success"
        }
      });
    }).error(function(q, w, e) {
      return Dispatcher.handleServerAction({
        actionType: "notify",
        data: {
          text: "Delete Container fail " + w,
          status: "alert-danger"
        }
      });
    });
  },
  deleteContainerAction: function(containerIndex, actionIndex) {
    return Dispatcher.handleViewAction({
      actionType: "deleteContainerAction",
      data: {
        containerIndex: containerIndex,
        actionIndex: actionIndex
      }
    });
  },
  changeActionItem: function(index, key, value) {
    return Dispatcher.handleViewAction({
      actionType: "changeActionItem",
      data: {
        index: index,
        key: key,
        value: value
      }
    });
  },
  changeContainerItem: function(index, key, value) {
    return Dispatcher.handleViewAction({
      actionType: "changeContainerItem",
      data: {
        index: index,
        key: key,
        value: value
      }
    });
  },
  changeVersion: function(index) {
    return Dispatcher.handleViewAction({
      actionType: "changeVersion",
      data: index
    });
  },
  changePositionOfActionInContainer: function(indexActionInContainer, indexOfContainer, value) {
    return Dispatcher.handleViewAction({
      actionType: "changePositionOfActionInContainer",
      data: {
        indexActionInContainer: indexActionInContainer,
        indexOfContainer: indexOfContainer,
        value: value
      }
    });
  }
};

module.exports = Actions;
