// Generated by CoffeeScript 1.10.0
var CHANGE_EVENT, Dispatcher, EventEmitter, Store, _, _countClick, assign, setCountClick;

Dispatcher = require("../dispatcher/Dispatcher");

EventEmitter = require('events').EventEmitter;

assign = require('object-assign');

_ = require("lodash");

CHANGE_EVENT = 'change';

_countClick = 0;

Store = assign({}, EventEmitter.prototype, {
  getCountClick: function() {
    return _countClick;
  },
  emitChange: function() {
    return this.emit(CHANGE_EVENT);
  },
  addChangeListener: function(callback) {
    return this.on(CHANGE_EVENT, callback);
  },
  removeChangeListener: function(callback) {
    return this.removeListener(CHANGE_EVENT, callback);
  }
});

setCountClick = function(value) {
  return _countClick = value;
};

Store.dispatcherIndex = Dispatcher.register(function(payload) {
  var action, value;
  action = payload.action;
  switch (payload.source) {
    case 'VIEW_ACTION':
      value = action.data;
      switch (action.actionType) {
        case "clickOnBtn":
          setCountClick(value);
          break;
        default:
          return true;
      }
      break;
    case 'SERVER_ACTION':
      action = payload.action;
      switch (action.actionType) {
        case "loadContainers":
          console.log("hi");
          break;
        default:
          return true;
      }
      break;
    default:
      return true;
  }
  Store.emitChange();
  return true;
});

module.exports = Store;
