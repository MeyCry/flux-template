// Generated by CoffeeScript 1.10.0
var CHANGE_EVENT_NOTIFY, Dispatcher, EventEmitter, NotifyStore, Store, _notify, assign, setNotify;

Dispatcher = require("../dispatcher/Dispatcher");

EventEmitter = require('events').EventEmitter;

assign = require('object-assign');

Store = require("./Store");

CHANGE_EVENT_NOTIFY = "changeNotify";

_notify = {
  text: "",
  status: "alert-info"
};

NotifyStore = assign({}, EventEmitter.prototype, {
  getNotify: function() {
    return _notify;
  },
  emitChange: function() {
    return this.emit(CHANGE_EVENT_NOTIFY);
  },
  onNotify: function(callback) {
    return this.on(CHANGE_EVENT_NOTIFY, callback);
  },
  offNotify: function(callback) {
    return this.removeListener(CHANGE_EVENT_NOTIFY, callback);
  }
});

setNotify = function(data) {
  return _notify = data;
};

NotifyStore.dispatcherIndex = Dispatcher.register(function(payload) {
  var action;
  action = payload.action;
  switch (action.actionType) {
    case "notify":
      setNotify(action.data);
  }
  NotifyStore.emitChange();
  setTimeout(function() {
    setNotify({
      text: "",
      status: ""
    });
    return NotifyStore.emitChange();
  }, 6000);
  return true;
});

module.exports = NotifyStore;
